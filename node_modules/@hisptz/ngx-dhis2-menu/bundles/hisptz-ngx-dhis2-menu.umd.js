(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common/http'), require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('@angular/animations'), require('lodash'), require('@angular/common'), require('@angular/forms')) :
    typeof define === 'function' && define.amd ? define('@hisptz/ngx-dhis2-menu', ['exports', '@angular/common/http', '@angular/core', 'rxjs', 'rxjs/operators', '@angular/animations', 'lodash', '@angular/common', '@angular/forms'], factory) :
    (factory((global.hisptz = global.hisptz || {}, global.hisptz['ngx-dhis2-menu'] = {}),global.ng.common.http,global.ng.core,global.rxjs,global.rxjs.operators,global.ng.animations,null,global.ng.common,global.ng.forms));
}(this, (function (exports,i1,i0,rxjs,operators,animations,_,common,forms) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var /** @type {?} */ PREDEFINED_MENU_ITEMS = [
        {
            name: 'Data element',
            namespace: 'data-element',
            defaultAction: 'dhis-web-maintenance/#/list/dataElementSection',
            displayName: 'Data element',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'A unit of analysis and member of datasets',
            onlyShowOnSearch: true
        },
        {
            name: 'Data element group',
            namespace: 'data-element-group',
            defaultAction: 'dhis-web-maintenance/#/list/dataElementSection/dataElementGroup',
            displayName: 'Data element group',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'Groups of data elements for analysis and cross tabulation',
            onlyShowOnSearch: true
        },
        {
            name: 'Data element group set',
            namespace: 'data-element-group-set',
            defaultAction: 'dhis-web-maintenance/#/list/dataElementSection/dataElementGroupSet',
            displayName: 'Data element group set',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'A set of groups of data elements used for analysis and cross tabulation',
            onlyShowOnSearch: true
        },
        {
            name: 'Indicator',
            namespace: 'indicator',
            defaultAction: 'dhis-web-maintenance/#/list/indicatorSection/indicator',
            displayName: 'Indicator',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'A computed value from data elements used for data analysis',
            onlyShowOnSearch: true
        },
        {
            name: 'Indicator type',
            namespace: 'indicator-type',
            defaultAction: 'dhis-web-maintenance/#/list/indicatorSection/indicatorType',
            displayName: 'Indicator type',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'Type of indicator used as a factor, such as percentages, rates and ratios',
            onlyShowOnSearch: true
        },
        {
            name: 'Indicator group',
            namespace: 'indicator-type',
            defaultAction: 'dhis-web-maintenance/#/list/indicatorSection/indicatorGroup',
            displayName: 'Indicator group',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'A group of indicators used for analysis and cross tabulation',
            onlyShowOnSearch: true
        },
        {
            name: 'Settings',
            displayName: 'Settings',
            namespace: '/dhis-web-user-profile',
            defaultAction: '/dhis-web-user-profile/#/settings',
            icon: '/icons/usersettings.png',
            description: 'User settings for updating language, theme and notification settings',
            onlyShowOnSearch: true
        },
        {
            name: 'Profile',
            displayName: 'Profile',
            namespace: '/dhis-web-user-profile',
            defaultAction: '/dhis-web-user-profile/#/profile',
            icon: '/icons/function-profile.png',
            description: 'User settings for updating names, email, phone number and other profile details',
            onlyShowOnSearch: true
        },
        {
            name: 'Account',
            displayName: 'Account',
            namespace: '/dhis-web-user-profile',
            defaultAction: '/dhis-web-user-profile/#/account',
            icon: '/icons/function-account.png',
            description: 'User settings for updating account passwords',
            onlyShowOnSearch: true
        },
        {
            name: 'Help',
            displayName: 'Help',
            namespace: '/dhis-web-commons-about',
            defaultAction: 'https://dhis2.github.io/dhis2-docs/master/en/user/html/dhis2_user_manual_en.html',
            icon: '/icons/function-account.png',
            description: 'Help and documentation page on using DHIS2',
            onlyShowOnSearch: true
        },
        {
            name: 'About DHIS2',
            displayName: 'About DHIS2',
            namespace: '/dhis-web-commons-about',
            defaultAction: '/dhis-web-commons-about/about.action',
            icon: '/icons/function-about-dhis2.png',
            description: 'Details about running dhis2 versions, database and other setup information',
            onlyShowOnSearch: true
        },
        {
            name: 'Category option',
            displayName: 'Category option',
            namespace: '/dhis-web-category-option',
            defaultAction: '/dhis-web-maintenance/#/list/categorySection/categoryOption',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'Disagregation of data elements and data set for cross tabulation on data entry and analysis',
            onlyShowOnSearch: true
        },
        {
            name: 'Category',
            displayName: 'Category',
            namespace: '/dhis-web-category',
            defaultAction: '/dhis-web-maintenance/#/list/categorySection/category',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'Combination of options used as disaggregation of data elements and datasets for cross tabulation',
            onlyShowOnSearch: true
        },
        {
            name: 'Category combination',
            displayName: 'Category combination',
            namespace: '/dhis-web-category-combo',
            defaultAction: '/dhis-web-maintenance/#/list/categorySection/categoryCombo',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'Set of combinations of options used as disaggregation of data elements and datasets for cross tabulation',
            onlyShowOnSearch: true
        },
        {
            name: 'Category option combination',
            displayName: 'Category option combination',
            namespace: '/dhis-web-category-option-combination',
            defaultAction: '/dhis-web-maintenance/#/list/categorySection/categoryOptionCombo',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'Generated individual disaggregation/cross-tabulations based on category combination',
            onlyShowOnSearch: true
        },
        {
            name: 'Category option group',
            displayName: 'Category option group',
            namespace: '/dhis-web-category-option-group',
            defaultAction: ' /dhis-web-maintenance/#/list/categorySection/categoryOptionGroup',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'Group of options used for cross tabulation during data analysis',
            onlyShowOnSearch: true
        },
        {
            name: 'Category option groupset',
            displayName: 'Category option groupset',
            namespace: '/dhis-web-category-option-groupset',
            defaultAction: '/dhis-web-maintenance/#/list/categorySection/categoryOptionGroupSet',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'A set of groups of options used for cross tabulation during data analysis',
            onlyShowOnSearch: true
        },
        {
            name: 'Data set',
            displayName: 'Data set',
            namespace: '/dhis-web-data-set',
            defaultAction: '/dhis-web-maintenance/#/list/dataSetSection/dataSet',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'A set of data elements used for data collection and reporting rates/data submission',
            onlyShowOnSearch: true
        },
        {
            name: 'Indicator group set',
            displayName: 'Indicator group set',
            namespace: '/dhis-web-indicator-group-set',
            defaultAction: '/dhis-web-maintenance/#/list/indicatorSection/indicatorGroupSet',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'A set of groups of indicators used for analysis and cross tabulation',
            onlyShowOnSearch: true
        },
        {
            name: 'Program indicator',
            displayName: 'Program indicator',
            namespace: '/dhis-web-program-indicator',
            defaultAction: '/dhis-web-maintenance/#/list/indicatorSection/programIndicator',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'Computed values based on formula of data from events and tracker data used for analysis',
            onlyShowOnSearch: true
        },
        {
            name: 'Program indicator group',
            displayName: 'Program indicator group',
            namespace: '/dhis-web-program-indicator-group',
            defaultAction: '/dhis-web-maintenance/#/list/indicatorSection/programIndicatorGroup',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'Group of computed values based on formula of data from events and tracker data used of analysis',
            onlyShowOnSearch: true
        },
        {
            name: 'Organisation unit',
            displayName: 'Organisation unit',
            namespace: '/dhis-web-organisation-unit',
            defaultAction: '/dhis-web-maintenance/#/list/organisationUnitSection/organisationUnit',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'Unit of data collection in reporting hierarchy, "WHERE" data is collected',
            onlyShowOnSearch: true
        },
        {
            name: 'Organisation unit group',
            displayName: 'Organisation unit group',
            namespace: '/dhis-web-organisation-unit-group',
            defaultAction: '/dhis-web-maintenance/#/list/organisationUnitSection/organisationUnitGroup',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'Group of units of data collection in reporting hierarchy used for analysis and cross tabulation',
            onlyShowOnSearch: true
        },
        {
            name: 'Organisation unit group set',
            displayName: 'Organisation unit group set',
            namespace: '/dhis-web-organisation-unit-group-set',
            defaultAction: '/dhis-web-maintenance/#/list/organisationUnitSection/organisationUnitGroupSet',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'A set of groups of organisation units used for analysis and cross tabulation',
            onlyShowOnSearch: true
        },
        {
            name: 'Organisation unit level',
            displayName: 'Organisation unit level',
            namespace: '/dhis-web-organisation-unit-level',
            defaultAction: '/dhis-web-maintenance/#/list/organisationUnitSection/organisationUnitLevel',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'Levels of organisaion units in a hierarchy of reporting',
            onlyShowOnSearch: true
        },
        {
            name: 'Hierarchy operations',
            displayName: 'Hierarchy operations',
            namespace: '/dhis-web-hierarchy-operations',
            defaultAction: '/dhis-web-maintenance/#/organisationUnitSection/hierarchy',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'Operations for moving organisation units within between parents within the hierarchy',
            onlyShowOnSearch: true
        },
        {
            name: 'Program',
            displayName: 'Program',
            namespace: '/dhis-web-program',
            defaultAction: '/dhis-web-maintenance/#/list/programSection/program',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'A set of data collection configurations for capturing events and tracker data',
            onlyShowOnSearch: true
        },
        {
            name: 'Tracked entity attribute',
            displayName: 'Tracked entity attribute',
            namespace: '/dhis-web-tracked-entity-attribute',
            defaultAction: '/dhis-web-maintenance/#/list/programSection/trackedEntityAttribute',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'Properties/details of an entity/person/sample/case being tracked in tracker program',
            onlyShowOnSearch: true
        },
        {
            name: 'Relationship type',
            displayName: 'Relationship type',
            namespace: '/dhis-web-relationship-type',
            defaultAction: '/dhis-web-maintenance/#/list/programSection/relationshipType',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'Types or nature of relationship between entities/person/sample/cases being tracked in tracker program',
            onlyShowOnSearch: true
        },
        {
            name: 'Tracked entity',
            displayName: 'Tracked entity',
            namespace: '/dhis-web-',
            defaultAction: '/dhis-web-maintenance/#/list/programSection/trackedEntity',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'Entity/person/sample/case being tracked in a tracker program',
            onlyShowOnSearch: true
        },
        {
            name: 'Program rule',
            displayName: 'Program rule',
            namespace: '/dhis-web-program-rule',
            defaultAction: '/dhis-web-maintenance/#/list/programSection/programRule',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'Rules/Criterials for enforcing validations or expected behaviors in tracker program',
            onlyShowOnSearch: true
        },
        {
            name: 'Program rule variable',
            displayName: 'Program rule variable',
            namespace: '/dhis-web-program-rule-variable',
            defaultAction: '/dhis-web-maintenance/#/list/programSection/programRuleVariable',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'Variables/expressions in rules used to evaluate conditions and creatirias in validation',
            onlyShowOnSearch: true
        },
        {
            name: 'Validation rule',
            displayName: 'Validation rule',
            namespace: '/dhis-web-validation-rule',
            defaultAction: '/dhis-web-maintenance/#/list/validationSection/validationRule',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'Rules used for data validation in data entry',
            onlyShowOnSearch: true
        },
        {
            name: 'Validation notification',
            displayName: 'Validation notification',
            namespace: '/dhis-web-validation-notification',
            defaultAction: '/dhis-web-maintenance/#/list/validationSection/validationNotificationTemplate',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'Notification templates for messages on fullfilment of a validation rule',
            onlyShowOnSearch: true
        },
        {
            name: 'Constant',
            displayName: 'Constant',
            namespace: '/dhis-web-constant',
            defaultAction: '/dhis-web-maintenance/#/list/otherSection/constant',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'A fixed value used accross indicators and data sets',
            onlyShowOnSearch: true
        },
        {
            name: 'Attribute',
            displayName: 'Attribute',
            namespace: '/dhis-web-attribute',
            defaultAction: '/dhis-web-maintenance/#/list/otherSection/attribute',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'Fields for extending additional properties for capturing information related to data captured in DHIS2',
            onlyShowOnSearch: true
        },
        {
            name: 'Option set',
            displayName: 'Option set',
            namespace: '/dhis-web-option-set',
            defaultAction: '/dhis-web-maintenance/#/list/otherSection/optionSet',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'A set of choices to be offered as drop down selection menu for data entry and analysis',
            onlyShowOnSearch: true
        },
        {
            name: 'Legend',
            displayName: 'Legend',
            namespace: '/dhis-web-legend',
            defaultAction: '/dhis-web-maintenance/#/list/otherSection/legendSet',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'A predefined range of colors used and key of colors for data analysis',
            onlyShowOnSearch: true
        },
        {
            name: 'Predicator',
            displayName: 'Predictor',
            namespace: '/dhis-web-predictor',
            defaultAction: '/dhis-web-maintenance/#/list/otherSection/predictor',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'Rule for calculation of predicted value based on prediction formula',
            onlyShowOnSearch: true
        },
        {
            name: 'Push analysis',
            displayName: 'Push analysis',
            namespace: '/dhis-web-push-analysis',
            defaultAction: '/dhis-web-maintenance/#/list/otherSection/pushAnalysis',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'Settings for pushing list of analysis dashboards to users mails and defined schedule',
            onlyShowOnSearch: true
        },
        {
            name: 'External map layer',
            displayName: 'External map layer',
            namespace: '/dhis-web-',
            defaultAction: '/dhis-web-maintenance/#/list/otherSection/externalMapLayer',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'Configuration of external rastor imagery layers for map overalys',
            onlyShowOnSearch: true
        },
        {
            name: 'Group editor',
            displayName: 'Group editor',
            namespace: '/dhis-web-group-editor',
            defaultAction: '/dhis-web-maintenance/#/group-editor',
            icon: 'icons/dhis-web-maintenance.png',
            description: 'Editing tool for management of group assignments',
            onlyShowOnSearch: true
        },
        {
            name: 'Resource table',
            displayName: 'Resource table',
            namespace: '/dhis-web-resource-table',
            defaultAction: '/dhis-web-maintenance-dataadmin/displayResourceTableForm.action',
            icon: '/icons/dhis-web-maintenance-dataadmin.png',
            description: 'Table for holding auto generated resources needed for reports and analytics tools',
            onlyShowOnSearch: true
        },
        {
            name: 'Cache administration',
            displayName: 'Cache administration',
            namespace: '/dhis-web-cache-administration',
            defaultAction: '/dhis-web-maintenance-dataadmin/displayMaintenanceForm.action',
            icon: '/icons/dhis-web-maintenance-dataadmin.png',
            description: 'Clearing of server cache, update changes made and for reloading apps',
            onlyShowOnSearch: true
        },
        {
            name: 'Schedule management',
            displayName: 'Schedule management',
            namespace: '/dhis-web-schedule-management',
            defaultAction: '/dhis-web-maintenance-dataadmin/viewScheduledTasks.action',
            icon: '/icons/dhis-web-maintenance-dataadmin.png',
            description: 'Management of schedule for running analytics and resource tables creation',
            onlyShowOnSearch: true
        },
        {
            name: 'Analytics management',
            displayName: 'Analytics management',
            namespace: '/dhis-web-schedule-management',
            defaultAction: '/dhis-web-reporting/displayDataMartForm.action',
            icon: '/icons/dhis-web-maintenance-dataadmin.png',
            description: 'Running analytics on demand and configuration of analytics before running',
            onlyShowOnSearch: true
        },
        {
            name: 'Standard reports',
            displayName: 'Standard reports',
            namespace: '/dhis-web-standard-reports',
            defaultAction: '/dhis-web-reporting/displayViewReportForm.action',
            icon: '/icons/dhis-web-reporting.png',
            description: 'Customized single page reports for personalized/customized report outputs',
            onlyShowOnSearch: true
        },
        {
            name: 'Dataset reports',
            displayName: 'Dataset reports',
            namespace: '/dhis-web-dataset-reports',
            defaultAction: '/dhis-web-reporting/showDataSetReportForm.action',
            icon: '/icons/dhis-web-reporting.png',
            description: 'Routine reports based on data entry forms layouts aggregated accross hierarchy and periods',
            onlyShowOnSearch: true
        },
        {
            name: 'Reporting rates',
            displayName: 'Reporting rates',
            namespace: '/dhis-web-reporting rates',
            defaultAction: '/dhis-web-reporting/displayViewDataCompletenessForm.action',
            icon: '/icons/dhis-web-reporting.png',
            description: 'Reports showing completeness and timelineness of submissions of datasets',
            onlyShowOnSearch: true
        },
        {
            name: 'Organisation unit report',
            displayName: 'Organisation unit report',
            namespace: '/dhis-web-organisation-unit-report',
            defaultAction: '/dhis-web-reporting/displayOrgUnitDistribution.action',
            icon: '/icons/dhis-web-reporting.png',
            description: 'Reports showing distribution of organisation units by groups and groupsets, e.g. ownership and types',
            onlyShowOnSearch: true
        },
        {
            name: 'Resources',
            displayName: 'Resources',
            namespace: '/dhis-web-resources',
            defaultAction: '/dhis-web-reporting/displayViewDocumentForm.action',
            icon: '/icons/dhis-web-reporting.png',
            description: 'Archive of files and other resources uploaded for reference purposes',
            onlyShowOnSearch: true
        },
        {
            name: 'Data approval',
            displayName: 'Data approval',
            namespace: '/dhis-web-data-approval',
            defaultAction: '/dhis-web-reporting/showDataApprovalForm.action',
            icon: '/icons/dhis-web-reporting.png',
            description: 'Approval and analysis of trend and rate of data approval',
            onlyShowOnSearch: true
        },
        {
            name: 'SQL Views',
            displayName: 'SQL Views',
            namespace: '/dhis-web-sql-views',
            defaultAction: '/dhis-web-maintenance-dataadmin/sqlView.action',
            icon: '/icons/dhis-web-maintenance-dataadmin.png',
            description: 'Management, generation and use of SQL views for csv data analysis',
            onlyShowOnSearch: true
        },
        {
            name: 'Data statistics',
            displayName: 'Data statistics',
            namespace: '/dhis-web-data-statistics',
            defaultAction: '/dhis-web-maintenance-dataadmin/viewStatistics.action',
            icon: '/icons/dhis-web-maintenance-dataadmin.png',
            description: 'Statistics on creation of metadata and datavalues in the database',
            onlyShowOnSearch: true
        }
    ];

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var /** @type {?} */ MENU_BACKGROUND_COLORS = {
        green: '#467e4a',
        light_blue: '#276696',
        india: '#ea5911',
        myanmar: '#276696',
        vietnam: '#b40303'
    };

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var /** @type {?} */ PROFILE_MENUS = [
        {
            name: 'Settings',
            namespace: '/dhis-web-user-profile',
            defaultAction: '/dhis-web-user-profile/#/settings',
            icon: 'icons/usersettings.png',
            description: ''
        },
        {
            name: 'Profile',
            namespace: '/dhis-web-user-profile',
            defaultAction: '/dhis-web-user-profile/#/profile',
            icon: 'icons/function-profile.png',
            description: ''
        },
        {
            name: 'Account',
            namespace: '/dhis-web-user-profile',
            defaultAction: '/dhis-web-user-profile/#/account',
            icon: 'icons/function-account.png',
            description: ''
        },
        {
            name: 'Help',
            namespace: '/dhis-web-commons-about',
            defaultAction: 'https://dhis2.github.io/dhis2-docs/master/en/user/html/dhis2_user_manual_en.html',
            icon: 'icons/function-account.png',
            description: ''
        },
        {
            name: 'About Dhis2',
            namespace: '/dhis-web-commons-about',
            defaultAction: '/dhis-web-commons-about/about.action',
            icon: 'icons/function-about-dhis2.png',
            description: ''
        }
    ];

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var MenuService = (function () {
        function MenuService(httpClient) {
            this.httpClient = httpClient;
            this._menuModules$ = new rxjs.BehaviorSubject([]);
        }
        /**
         * @param {?} rootUrl
         * @return {?}
         */
        MenuService.prototype.getSystemSettings = /**
         * @param {?} rootUrl
         * @return {?}
         */
            function (rootUrl) {
                var _this = this;
                return rxjs.Observable.create(function (observer) {
                    rxjs.forkJoin(_this.httpClient.get(rootUrl + 'api/systemSettings.json'), _this.httpClient.get(rootUrl + 'api/system/info.json')).subscribe(function (settings) {
                        observer.next(__assign({}, settings[0], settings[1]));
                        observer.complete();
                    }, function () { return observer.error(null); });
                });
            };
        /**
         * @param {?} rootUrl
         * @return {?}
         */
        MenuService.prototype.getMenuModules = /**
         * @param {?} rootUrl
         * @return {?}
         */
            function (rootUrl) {
                var _this = this;
                return rxjs.Observable.create(function (observer) {
                    _this.httpClient.get(rootUrl + 'dhis-web-commons/menu/getModules.action').subscribe(function (menuModuleResult) {
                        var /** @type {?} */ sanitizedMenu = _this._sanitizeMenuItems(menuModuleResult.modules, rootUrl);
                        _this._menuModules$.next(sanitizedMenu);
                        observer.next(sanitizedMenu);
                        observer.complete();
                    }, function () {
                        observer.next(null);
                        observer.complete();
                    });
                });
            };
        /**
         * @return {?}
         */
        MenuService.prototype.getSanitizedMenus = /**
         * @return {?}
         */
            function () {
                return this._menuModules$.asObservable();
            };
        /**
         * @param {?} rootUrl
         * @return {?}
         */
        MenuService.prototype.getUserInfo = /**
         * @param {?} rootUrl
         * @return {?}
         */
            function (rootUrl) {
                var _this = this;
                return rxjs.Observable.create(function (observer) {
                    _this.httpClient.get(rootUrl + 'api/me.json').subscribe(function (userInfo) {
                        observer.next(userInfo);
                        observer.complete();
                    }, function () {
                        observer.next(null);
                        observer.complete();
                    });
                });
            };
        /**
         * @param {?} menuItems
         * @param {?} rootUrl
         * @return {?}
         */
        MenuService.prototype._sanitizeMenuItems = /**
         * @param {?} menuItems
         * @param {?} rootUrl
         * @return {?}
         */
            function (menuItems, rootUrl) {
                var /** @type {?} */ sanitizedMenuItems = menuItems.map(function (item) {
                    var /** @type {?} */ newItem = __assign({}, item);
                    if (!newItem.hasOwnProperty('displayName') ||
                        newItem.displayName === '') {
                        newItem.displayName = newItem.name;
                    }
                    if (newItem.defaultAction.indexOf('http') === -1) {
                        newItem.defaultAction = '../../' + newItem.defaultAction;
                    }
                    if (newItem.icon.indexOf('http') === -1) {
                        newItem.icon = '../../' + newItem.icon;
                    }
                    newItem.onlyShowOnSearch = false;
                    return newItem;
                });
                var /** @type {?} */ predefinedMenuItems = PREDEFINED_MENU_ITEMS.map(function (item) {
                    var /** @type {?} */ newItem = __assign({}, item);
                    if (newItem.defaultAction) {
                        newItem.defaultAction = rootUrl + newItem.defaultAction;
                    }
                    if (newItem.icon) {
                        newItem.icon = rootUrl + newItem.icon;
                    }
                    return newItem;
                });
                return __spread(sanitizedMenuItems, predefinedMenuItems);
            };
        MenuService.decorators = [
            { type: i0.Injectable, args: [{ providedIn: 'root' },] },
        ];
        /** @nocollapse */
        MenuService.ctorParameters = function () {
            return [
                { type: i1.HttpClient }
            ];
        };
        /** @nocollapse */ MenuService.ngInjectableDef = i0.defineInjectable({ factory: function MenuService_Factory() { return new MenuService(i0.inject(i1.HttpClient)); }, token: MenuService, providedIn: "root" });
        return MenuService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var SystemStateService = (function () {
        function SystemStateService(httpClient) {
            this.httpClient = httpClient;
            this._loggingStatus$ = new rxjs.BehaviorSubject(true);
        }
        /**
         * @return {?}
         */
        SystemStateService.prototype.checkOnlineStatus = /**
         * @return {?}
         */
            function () {
                var _this = this;
                return rxjs.timer(1000, 30000).pipe(operators.switchMap(function () { return rxjs.of(navigator.onLine); }), operators.tap(function (onlineStatus) {
                    _this._checkLoginStatus(onlineStatus);
                }));
            };
        /**
         * @param {?} isOnline
         * @return {?}
         */
        SystemStateService.prototype._checkLoginStatus = /**
         * @param {?} isOnline
         * @return {?}
         */
            function (isOnline) {
                var _this = this;
                if (isOnline) {
                    this.pingServer().subscribe(function (pingResult) {
                        _this._loggingStatus$.next(pingResult.loggedIn);
                    }, function (error) {
                        if (isOnline) {
                            _this._loggingStatus$.next(false);
                        }
                    });
                }
                else {
                    this._loggingStatus$.next(true);
                }
            };
        /**
         * @return {?}
         */
        SystemStateService.prototype.getLoginStatus = /**
         * @return {?}
         */
            function () {
                return this._loggingStatus$.asObservable();
            };
        /**
         * @return {?}
         */
        SystemStateService.prototype.pingServer = /**
         * @return {?}
         */
            function () {
                return this.httpClient.get('../../../dhis-web-commons-stream/ping.action');
            };
        SystemStateService.decorators = [
            { type: i0.Injectable, args: [{ providedIn: 'root' },] },
        ];
        /** @nocollapse */
        SystemStateService.ctorParameters = function () {
            return [
                { type: i1.HttpClient }
            ];
        };
        /** @nocollapse */ SystemStateService.ngInjectableDef = i0.defineInjectable({ factory: function SystemStateService_Factory() { return new SystemStateService(i0.inject(i1.HttpClient)); }, token: SystemStateService, providedIn: "root" });
        return SystemStateService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var MenuComponent = (function () {
        function MenuComponent(menuService, systemStatusService) {
            this.menuService = menuService;
            this.systemStatusService = systemStatusService;
            this.rootUrl = '../../../';
            this.menuLoading = true;
            this.menuLoadingFail = false;
            this.loggedIn$ = this.systemStatusService.getLoginStatus();
            this.online = false;
            this.menuNotification = '';
            this.wasOffline = true;
            this.backgroundColor = '#ECECEC';
            this.showSidebar = false;
        }
        /**
         * @return {?}
         */
        MenuComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                var _this = this;
                this.systemStatusService.checkOnlineStatus().subscribe(function (onlineStatus) {
                    _this.online = onlineStatus;
                    if (_this.online && _this.wasOffline) {
                        _this.menuNotification = 'You are online';
                        _this.wasOffline = false;
                        /**
                                 * Hide notification status after sometimes
                                 */
                        setTimeout(function () {
                            _this.menuNotification = '';
                        }, 3000);
                        /**
                                 * Load system settings if failed
                                 */
                        if (_this.menuLoadingFail) {
                            _this.menuLoading = true;
                            _this.getSystemSettings();
                        }
                    }
                    else if (!_this.online) {
                        _this.menuNotification = 'You are offline';
                        _this.wasOffline = true;
                    }
                });
                this.getSystemSettings();
            };
        /**
         * @param {?} e
         * @return {?}
         */
        MenuComponent.prototype.toggleSideBar = /**
         * @param {?} e
         * @return {?}
         */
            function (e) {
                e.stopPropagation();
                this.showSidebar = !this.showSidebar;
            };
        /**
         * @return {?}
         */
        MenuComponent.prototype.getSystemSettings = /**
         * @return {?}
         */
            function () {
                var _this = this;
                this.menuService.getSystemSettings(this.rootUrl).subscribe(function (settings) {
                    if (settings) {
                        _this.applicationTitle = settings['applicationTitle'];
                        // get system current background style
                        var /** @type {?} */ colorName = settings.hasOwnProperty('currentStyle')
                            ? settings['currentStyle'].split('/')[0]
                            : settings.hasOwnProperty('keyStyle')
                                ? settings['keyStyle'].split('/')[0]
                                : 'blue';
                        _this.backgroundColor =
                            MENU_BACKGROUND_COLORS[colorName];
                        _this.contextPath = settings.contextPath ? settings.contextPath + '/' : '';
                    }
                    _this.menuLoading = false;
                    _this.menuLoadingFail = false;
                }, function () {
                    _this.menuLoading = false;
                    _this.menuLoadingFail = true;
                });
            };
        MenuComponent.decorators = [
            { type: i0.Component, args: [{
                        selector: 'ngx-dhis2-menu',
                        template: "<div class=\"menu-container\">\n\n  <!-- notification area -->\n  <div class=\"menu-notification-area\" *ngIf=\"menuNotification !== ''\" [@open]>\n    {{ menuNotification }}\n  </div>\n  <!-- end of notification area -->\n  <!-- login form area -->\n  <div class=\"login-form-container\" *ngIf=\"!(loggedIn$ | async)\">\n    <app-login-form></app-login-form>\n  </div>\n  <!-- end of login form area -->\n\n  <!--menu loading area-->\n  <div class=\"menu-loader\" *ngIf=\"menuLoading\">\n    <app-menu-loader></app-menu-loader>\n  </div>\n  <!--end of menu loading area-->\n\n  <!--menu loading failed area-->\n  <div class=\"menu-content\" *ngIf=\"!menuLoading && menuLoadingFail\" style=\"background-color: #eeeeee\">\n    &nbsp;\n  </div>\n  <!--end of menu loading failed area-->\n\n  <!--menu content area-->\n  <div class=\"menu-content\" [style.background-color]=\"backgroundColor\" *ngIf=\"!menuLoading && !menuLoadingFail\">\n    <!--menu left block-->\n    <div class=\"menu-left-block\">\n\n      <!--menu brand area-->\n      <div class=\"menu-brand\">\n        <a [href]=\"rootUrl + 'dhis-web-commons-about/redirect.action'\">\n          <img [src]=\"rootUrl + 'api/staticContent/logo_banner'\" alt=\"\">\n        </a>\n      </div>\n      <!--end of menu brand area-->\n\n      <!--menu title area-->\n      <div class=\"menu-title-block\">\n        <a [href]=\"rootUrl + 'dhis-web-commons-about/redirect.action'\" class=\"menu-title\">\n          {{applicationTitle}}\n        </a>\n      </div>\n      <!--end of menu title area-->\n    </div>\n    <!--end of menu left block-->\n\n    <!--menu right block-->\n    <div class=\"menu-right-block\">\n      <div class=\"menu-notification-block\">\n        <app-menu-notification [rootUrl]=\"rootUrl\"></app-menu-notification>\n      </div>\n      <!--menu search block-->\n      <div class=\"menu-search-block\">\n        <app-menu-search></app-menu-search>\n      </div>\n      <!--end of menu search block-->\n\n      <!--menu profile block-->\n      <div class=\"menu-profile-block\">\n        <app-menu-profile [rootUrl]=\"rootUrl\" [contextPath]=\"contextPath\" [backgroundColor]=\"backgroundColor\"></app-menu-profile>\n      </div>\n      <!--end of menu profile block-->\n\n      <!--menu sidebar toggle button-->\n      <div\n        class=\"menu-toggle-button\"\n      >\n        <a\n          (click)=\"toggleSideBar($event)\"\n        >\n          <svg\n            class=\"menu-toggle-icon\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path d=\"M4 8h4V4H4v4zm6 12h4v-4h-4v4zm-6 0h4v-4H4v4zm0-6h4v-4H4v4zm6 0h4v-4h-4v4zm6-10v4h4V4h-4zm-6 4h4V4h-4v4zm6 6h4v-4h-4v4zm0 6h4v-4h-4v4z\"></path>\n          </svg>\n        </a>\n      </div>\n      <!--end of menu sidebar toggle button-->\n\n      <!--sidebar menu block-->\n      <div class=\"sidebar-menu-nav\" *ngIf=\"showSidebar\">\n        <app-menu-side-bar></app-menu-side-bar>\n      </div>\n      <!--end of sidebar menu block-->\n      <div></div>\n    </div>\n    <!--end of menu right block-->\n  </div>\n  <!--end of menu content area-->\n</div>\n",
                        styles: [".menu-container{position:fixed;left:0;top:0;right:0;z-index:1400;height:48px}.menu-loader{height:100%}.menu-content{display:flex;width:100%;height:100%;justify-content:space-between}.menu-left-block,.menu-right-block{display:flex}.menu-brand{width:155px;height:100%;display:flex;justify-content:center;align-items:center}.menu-brand>a>img{display:block;margin:auto;max-height:44px;max-width:155px}.menu-title-block{overflow:hidden;white-space:nowrap;color:#fff;align-items:center;justify-items:center;display:flex;padding-right:1rem}.menu-title{font-size:1rem;font-weight:700;color:#fff;text-decoration:none;text-overflow:ellipsis;min-width:1px;overflow:hidden;white-space:nowrap}.menu-search-block{height:100%}.login-form-container{position:fixed;z-index:1500;top:2px;left:20%;min-height:42px;border-color:#f0c36d;background-color:#f9edbe;border-radius:3px}.menu-notification-area{position:fixed;z-index:1500;top:7px;left:20%;height:auto;border-color:#f0c36d;background-color:#f9edbe;border-radius:3px;padding:5px;font-size:15px}.menu-toggle-button{display:none;flex-direction:row;justify-content:flex-end;padding-right:10px;padding-top:6px}.menu-toggle-icon{display:inline-block;height:35px;width:35px;fill:#fff}.sidebar-menu-nav{position:absolute;top:100%;width:400px;height:100vh;right:0;z-index:900;font-size:14px;text-align:left;list-style:none;background-color:#fff;-webkit-background-clip:padding-box;transition:width .5s cubic-bezier(.39,-.04,.2,1);background-clip:padding-box;box-shadow:0 6px 12px rgba(0,0,0,.175)}@media (max-width:400px){.sidebar-menu-nav{width:95%}}@media (max-width:500px){.login-form-container{top:50px;left:2%;width:96%;height:auto}.menu-notification-area{left:2%;right:2%;width:96%;height:auto}}@media (max-width:999px){.menu-profile-block,.menu-search-block,.menu-title-block{display:none}.menu-brand{justify-content:flex-start;margin-left:15px}.menu-toggle-button{display:flex}}.menu-notification-block{display:flex;align-items:center;height:100%;margin-right:30px}@media (min-width:1010px){.sidebar-menu-nav{display:none!important}}"],
                        animations: [
                            animations.trigger('open', [
                                animations.state('in', animations.style({
                                    opacity: 1
                                })),
                                animations.transition('void => *', [
                                    animations.style({
                                        opacity: 0
                                    }),
                                    animations.animate(700)
                                ]),
                                animations.transition('* => void', [
                                    animations.animate(400),
                                    animations.style({
                                        opacity: 0
                                    })
                                ])
                            ])
                        ]
                    },] },
        ];
        /** @nocollapse */
        MenuComponent.ctorParameters = function () {
            return [
                { type: MenuService },
                { type: SystemStateService }
            ];
        };
        return MenuComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var /** @type {?} */ containers = [MenuComponent];

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var LoginFormComponent = (function () {
        function LoginFormComponent(httpClient) {
            this.httpClient = httpClient;
            this.credentials = {
                username: undefined,
                password: undefined
            };
            this.loginError = '';
        }
        /**
         * @return {?}
         */
        LoginFormComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
            };
        /**
         * @param {?} e
         * @return {?}
         */
        LoginFormComponent.prototype.onSubmit = /**
         * @param {?} e
         * @return {?}
         */
            function (e) {
                var _this = this;
                e.stopPropagation();
                this.loggingIn = true;
                this.loginError = '';
                var /** @type {?} */ headers = new i1.HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');
                this.httpClient.post('../../../dhis-web-commons-security/login.action', 'j_username=' +
                    this.credentials.username +
                    '&j_password=' +
                    this.credentials.password, {
                    headers: headers
                }).pipe(operators.catchError(this._handleError)).subscribe(function () {
                    _this.loggingIn = false;
                }, function (error) {
                    _this.loggingIn = false;
                    if (error.status === 200 && error.url.indexOf('login') !== -1) {
                        _this.loginError = 'Incorrect username or password';
                    }
                });
            };
        /**
         * @param {?} err
         * @return {?}
         */
        LoginFormComponent.prototype._handleError = /**
         * @param {?} err
         * @return {?}
         */
            function (err) {
                var /** @type {?} */ error = null;
                if (err.error instanceof Error) {
                    // A client-side or network error occurred. Handle it accordingly.
                    error = {
                        message: err.error,
                        status: err.status,
                        statusText: err.statusText,
                        url: err.url
                    };
                }
                else {
                    // The backend returned an unsuccessful response code.
                    // The response body may contain clues as to what went wrong,
                    error = {
                        message: err.error instanceof Object ? err.error.message : err.error ? err.error : err.message,
                        status: err.status,
                        statusText: err.statusText,
                        url: err.url
                    };
                }
                return rxjs.throwError(error);
            };
        LoginFormComponent.decorators = [
            { type: i0.Component, args: [{
                        selector: 'app-login-form',
                        template: "<form action=\"\" class=\"login-form\" #loginForm=\"ngForm\">\n  <input class=\"login-form-input\" type=\"text\" required [(ngModel)]=\"credentials.username\" name=\"username\" #username=\"ngModel\"\n    placeholder=\"Enter username\" autofocus tabindex=\"0\">\n  <input class=\"login-form-input\" type=\"password\" required [(ngModel)]=\"credentials.password\" name=\"password\" #password=\"ngModel\"\n    placeholder=\"Enter password\" autofocus tabindex=\"1\">\n  <button class=\"login-form-button\" type=\"submit\" [disabled]=\"(!password.valid && !username.valid) || loggingIn\" (click)=\"onSubmit($event)\"\n    tabindex=\"2\">\n    {{loggingIn ? 'Logging in ...' : 'Login'}}\n  </button>\n</form>\n<div *ngIf=\"loginError !== ''\" class=\"login-error-block\">{{loginError}}</div>",
                        styles: [".login-form{display:flex;padding:3px!important;width:100%}.login-form-input{padding-left:7px;display:flex;align-items:center;justify-content:flex-start;margin-right:3px;height:37px;outline:0;border-radius:2px;border:thin solid #ececec}.login-form-button{height:37px;background-color:#fff;border:thin solid #ececec;border-radius:2px;cursor:pointer}.login-error-block{font-size:14px;color:red;padding:5px}@media (max-width:500px){.login-form{display:block}.login-form input{width:100%;margin-bottom:3px;margin-right:0}.login-form button{width:100%;text-align:center}}"]
                    },] },
        ];
        /** @nocollapse */
        LoginFormComponent.ctorParameters = function () {
            return [
                { type: i1.HttpClient }
            ];
        };
        return LoginFormComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var MenuSearchComponent = (function () {
        function MenuSearchComponent(menuService) {
            this.menuService = menuService;
            this.rootUrl = '../../../';
            this.searchWidth = 47;
            this.showApps = false;
            this.apps = [];
            this.originalApps = [];
            this.loadingModules = true;
            this.filteredApp = '';
        }
        /**
         * @return {?}
         */
        MenuSearchComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                var _this = this;
                this.menuService
                    .getMenuModules(this.rootUrl)
                    .subscribe(function (menuModules) {
                    if (menuModules !== null) {
                        _this.loadingModules = false;
                        _this.originalApps = __spread(menuModules);
                        _this.apps = _this._prepareMenuModules();
                    }
                });
            };
        /**
         * @return {?}
         */
        MenuSearchComponent.prototype._prepareMenuModules = /**
         * @return {?}
         */
            function () {
                return this.filteredApp === ''
                    ? this.originalApps.filter(function (menu) {
                        return !menu.onlyShowOnSearch;
                    })
                    : this.originalApps;
            };
        /**
         * @return {?}
         */
        MenuSearchComponent.prototype.updateMenuModules = /**
         * @return {?}
         */
            function () {
                this.apps = this._prepareMenuModules();
            };
        /**
         * @param {?=} e
         * @return {?}
         */
        MenuSearchComponent.prototype.widdenSearch = /**
         * @param {?=} e
         * @return {?}
         */
            function (e) {
                if (e) {
                    e.stopPropagation();
                }
                document.getElementById('menu_search_input').focus();
                this.showApps = true;
            };
        /**
         * @param {?=} e
         * @return {?}
         */
        MenuSearchComponent.prototype.reduceSearch = /**
         * @param {?=} e
         * @return {?}
         */
            function (e) {
                if (e) {
                    e.stopPropagation();
                }
                document.getElementById('menu_search_input').blur();
                this.showApps = false;
            };
        /**
         * @param {?} e
         * @return {?}
         */
        MenuSearchComponent.prototype.toggleSearch = /**
         * @param {?} e
         * @return {?}
         */
            function (e) {
                e.stopPropagation();
                if (this.showApps) {
                    this.reduceSearch();
                }
                else {
                    this.widdenSearch();
                }
            };
        MenuSearchComponent.decorators = [
            { type: i0.Component, args: [{
                        selector: 'app-menu-search',
                        template: "<div class=\"menu-search-container\" appClickOutside (clickOutside)=\"reduceSearch()\">\n  <div class=\"menu-search-icon\">\n    <svg class=\"\" viewBox=\"0 0 24 24\"\n         style=\"display: inline-block; color: rgba(0, 0, 0, 0.87); fill: white; height: 24px; width: 24px; user-select: none; transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms; padding: 0px;\">\n      <path\n        d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"></path>\n    </svg>\n  </div>\n  <div class=\"menu-search-input-block\">\n    <input type=\"text\" class=\"menu-search-input\" id=\"menu_search_input\" placeholder=\"Search Apps\"\n           (focus)=\"widdenSearch($event)\" [(ngModel)]=\"filteredApp\" (ngModelChange)=\"updateMenuModules()\"/>\n    <span class=\"underline\"></span>\n  </div>\n  <div class=\"menu-toggle-link\">\n    <a (click)=\"toggleSearch($event)\">\n      <svg class=\"menu-toggle-icon\" viewBox=\"0 0 24 24\">\n        <path\n          d=\"M4 8h4V4H4v4zm6 12h4v-4h-4v4zm-6 0h4v-4H4v4zm0-6h4v-4H4v4zm6 0h4v-4h-4v4zm6-10v4h4V4h-4zm-6 4h4V4h-4v4zm6 6h4v-4h-4v4zm0 6h4v-4h-4v4z\"></path>\n      </svg>\n    </a>\n  </div>\n\n  <div class=\"menu-list-block\" [@slide] *ngIf=\"showApps\">\n    <div *ngIf=\"(apps | filterByName: filteredApp).length !== 0\" class=\"menu-inner-list-block\">\n      <a *ngFor=\"let app of  apps | filterByName:filteredApp\" [href]=\"app.defaultAction\" class=\"app-menu-btn\"\n         title=\"{{ app.description }}\">\n        <div class=\"app-menu-inner-block\">\n          <img alt=\"\" [src]=\"app.icon\">\n          <div class=\"app-menu-name\">{{app.displayName}}</div>\n        </div>\n      </a>\n    </div>\n    <div class=\"menu-inner-list-block-no-match\" *ngIf=\"(apps | filterByName: filteredApp).length == 0\">\n      <p>No match found!</p>\n    </div>\n    <div class=\"menu-app-management-block\">\n      <a [href]=\"rootUrl + 'dhis-web-menu-management/'\" class=\"app-management-btn\">\n        Manage my Apps\n      </a>\n    </div>\n  </div>\n</div>\n",
                        styles: [".menu-search-container{display:flex;position:relative;height:100%}.menu-search-input-block{width:390px}#menu_search_input{padding:0!important;margin:0!important;background-color:transparent;color:#fff!important;float:right;border-style:none;border-bottom:1px solid #f1f1f1;transition:all .2s ease-in-out;display:flex;align-items:center;height:37px;font-size:15px;width:100%}#menu_search_input::-webkit-input-placeholder{color:rgba(255,255,255,.7)}#menu_search_input::-moz-placeholder{color:rgba(255,255,255,.7)}#menu_search_input:-ms-input-placeholder{color:rgba(255,255,255,.7)}#menu_search_input:-moz-placeholder{color:rgba(255,255,255,.7)}#menu_search_input:focus{outline:0}#menu_search_input:focus+.underline{-webkit-transform:scale(1);transform:scale(1)}.underline{background-color:#fff;position:absolute;height:2px;width:390px;bottom:11px;-webkit-transform:scale(0,1);transform:scale(0,1);transition:all .3s linear}.menu-toggle-link{margin:10px}.menu-toggle-link a{cursor:pointer}.menu-toggle-icon{display:block;height:25px;width:25px;fill:#fff}.menu-list-block{position:absolute;display:block;top:49px;width:590px;min-height:430px;right:10px;z-index:-1000;font-size:14px;text-align:left;list-style:none;background-color:#fff;box-shadow:0 0 3px rgba(0,0,0,.3)}.menu-inner-list-block{display:flex;overflow:hidden;flex-wrap:wrap;height:380px;padding:10px 5px 10px 10px}.menu-inner-list-block:hover{overflow:auto}.menu-inner-list-block-no-match{display:flex;overflow:hidden;flex-wrap:wrap;height:380px;font-size:26px;color:#ccc}.menu-inner-list-block-no-match p{padding-top:100px;width:100%!important;text-align:center}.apps{padding:15px;overflow:auto;right:35px;width:600px;height:400px}.apps-hidden{display:none}.apps,.profile{position:absolute;background-color:#fff;border:1px solid #ececec;top:50px;z-index:1000;box-shadow:0 5px 10px rgba(0,0,0,.175)}.app-menu-btn{margin:5px;text-decoration:none;height:120px;width:120px;display:flex;justify-content:center;align-items:center;transition:all .2s ease-in-out;padding:5px}.app-menu-btn:hover{background-color:#f1f1f1;-webkit-transform:scale(1.01);transform:scale(1.01)}.app-menu-btn img{display:block;margin:auto;height:53px}.app-menu-name{margin-top:5px;font-size:13px;text-align:center;color:#222}.menu-inner-list-block::-webkit-scrollbar{width:10px}.menu-inner-list-block::-webkit-scrollbar-track{background-color:rgba(0,0,0,.02)}.menu-inner-list-block::-webkit-scrollbar-thumb{background-color:rgba(0,0,0,.1)}.menu-app-management-block{width:100%;height:50px;display:flex;align-items:center;justify-content:center;box-shadow:0 -1px 2px -1px rgba(0,0,0,.16)}.app-management-btn{transition:all .2s ease-in-out;display:flex;align-items:center;justify-content:center;font-size:13px;height:40px;width:97%;color:#222;text-decoration:none}.app-management-btn:hover{background-color:#eee;-webkit-transform:scale(1.01);transform:scale(1.01)}.menu-search-icon{display:flex;align-items:center;margin-right:7px}"],
                        animations: [
                            animations.trigger('slide', [
                                animations.state('in', animations.style({
                                    opacity: 1
                                })),
                                animations.transition('void => *', [
                                    animations.style({
                                        transform: 'translateY(-100%)'
                                    }),
                                    animations.animate(300)
                                ]),
                                animations.transition('* => void', [
                                    animations.animate(300),
                                    animations.style({
                                        transform: 'translateY(-100%)'
                                    })
                                ])
                            ])
                        ]
                    },] },
        ];
        /** @nocollapse */
        MenuSearchComponent.ctorParameters = function () {
            return [
                { type: MenuService }
            ];
        };
        MenuSearchComponent.propDecorators = {
            rootUrl: [{ type: i0.Input }]
        };
        return MenuSearchComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var MenuProfileComponent = (function () {
        function MenuProfileComponent(menuService) {
            this.menuService = menuService;
            this.showProfile = false;
            this.rootUrl = this.contextPath = '../../../';
            this.loadingUser = true;
            this.profileMenus = PROFILE_MENUS;
        }
        /**
         * @return {?}
         */
        MenuProfileComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                var _this = this;
                this.menuService.getUserInfo(this.rootUrl).subscribe(function (profile) {
                    if (profile) {
                        _this.currentUser = {
                            name: profile.displayName,
                            email: profile.email,
                        };
                    }
                    _this.loadingUser = false;
                });
            };
        /**
         * @param {?} e
         * @return {?}
         */
        MenuProfileComponent.prototype.showMenuProfile = /**
         * @param {?} e
         * @return {?}
         */
            function (e) {
                e.stopPropagation();
                this.showProfile = true;
            };
        /**
         * @param {?=} e
         * @return {?}
         */
        MenuProfileComponent.prototype.hideMenuProfile = /**
         * @param {?=} e
         * @return {?}
         */
            function (e) {
                if (e) {
                    e.stopPropagation();
                }
                this.showProfile = false;
            };
        MenuProfileComponent.decorators = [
            { type: i0.Component, args: [{
                        selector: 'app-menu-profile',
                        template: "<div class=\"menu-profile-container\" appClickOutside (clickOutside)=\"hideMenuProfile()\">\n    <div class=\"menu-profile-btn\">\n        <a class=\"menu-profile-icon\" [style.background-color]=\"backgroundColor | convertToLighterColor\" (mouseenter)=\"showMenuProfile($event)\">\n            {{currentUser?.name | abbreviate}}\n        </a>\n    </div>\n    <div class=\"profile-menu-list-block\" *ngIf=\"showProfile && !loadingUser\" (mouseleave)=\"hideMenuProfile($event)\">\n        <div class=\"profile-menus-list\">\n            <a *ngFor=\"let profileMenu of profileMenus\" [href]=\"rootUrl + profileMenu.defaultAction\" class=\"profile-menu-btn\">\n                <div>\n                    <img alt=\"\" [src]=\"contextPath + profileMenu.icon\">\n                    <div class=\"profile-menu-name\">{{profileMenu?.name}}</div>\n                </div>\n            </a>\n        </div>\n        <div class=\"user-profile-block\">\n            <div [style.background-color]=\"backgroundColor | convertToLighterColor\" class=\"user-profile-logo\" *ngIf=\"!loadingUser\">{{currentUser?.name | abbreviate}}</div>\n            <div class=\"user-profile-name\">\n                <span *ngIf=\"!loadingUser\"><b>{{currentUser?.name}}</b></span>\n            </div>\n            <div><small *ngIf=\"!loadingUser\">{{currentUser?.email}}</small></div>\n            <div class=\"logout-btn-block\">\n                <a class=\"logout-btn\" [href]=\"rootUrl + 'dhis-web-commons-security/logout.action'\" *ngIf=\"!loadingUser\">\n            LOG OUT\n          </a>\n            </div>\n        </div>\n    </div>\n</div>\n",
                        styles: [".menu-profile-icon{height:34px;width:34px;border-radius:17px;display:flex;justify-content:center;align-items:center;font-size:15px;cursor:pointer;text-decoration:none;color:#eee!important}.menu-profile-btn{margin-right:2rem;margin-top:5px}.profile-menu-list-block{position:absolute;top:42px;max-width:650px;width:100%;min-height:320px;right:10px;z-index:-1000;font-size:14px;text-align:left;list-style:none;background-color:#fff;display:flex;box-shadow:0 0 3px rgba(0,0,0,.3)}.profile-menus-list{width:70%;display:flex;flex-wrap:wrap;overflow:auto;padding:15px;height:300px}.user-profile-block{position:relative;text-align:center;width:30%;height:320px;padding-top:20px;background-color:#f5f5f5}.user-profile-logo{margin:auto;height:60px;width:60px;display:flex;justify-content:center;align-items:center;border-radius:30px;font-size:30px;color:#eee;font-weight:500}.user-profile-name{margin-top:10px}.logout-btn-block{position:absolute;bottom:20px;color:#555;padding:5px;width:100%}.logout-btn{display:block;text-decoration:none;text-align:center}.logout-btn:hover{color:#222}.profile-menu-btn{margin:5px;text-decoration:none;height:120px;width:120px;display:flex;justify-content:center;align-items:center;transition:all .2s ease-in-out;padding:5px}.profile-menu-btn:hover{background-color:#f1f1f1;-webkit-transform:scale(1.01);transform:scale(1.01)}.profile-menu-btn img{display:block;margin:auto;height:50px}.profile-menu-name{margin-top:5px;font-size:11px;text-align:center;color:#222}"]
                    },] },
        ];
        /** @nocollapse */
        MenuProfileComponent.ctorParameters = function () {
            return [
                { type: MenuService }
            ];
        };
        MenuProfileComponent.propDecorators = {
            rootUrl: [{ type: i0.Input }],
            contextPath: [{ type: i0.Input }],
            backgroundColor: [{ type: i0.Input }]
        };
        return MenuProfileComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var MenuLoaderComponent = (function () {
        function MenuLoaderComponent() {
        }
        /**
         * @return {?}
         */
        MenuLoaderComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
            };
        MenuLoaderComponent.decorators = [
            { type: i0.Component, args: [{
                        selector: 'app-menu-loader',
                        template: "<div\n  class=\"animated-background\"\n></div>\n",
                        styles: ["@-webkit-keyframes placeHolderShimmer{0%{background-position:-468px 0}100%{background-position:468px 0}}@keyframes placeHolderShimmer{0%{background-position:-468px 0}100%{background-position:468px 0}}.animated-background{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:placeHolderShimmer;animation-name:placeHolderShimmer;-webkit-animation-timing-function:linear;animation-timing-function:linear;background:#f6f7f8;background:linear-gradient(to right,#eee 8%,#ddd 18%,#eee 33%);background-size:800px 104px;height:100%;position:relative}"]
                    },] },
        ];
        /** @nocollapse */
        MenuLoaderComponent.ctorParameters = function () { return []; };
        return MenuLoaderComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var MenuSideBarComponent = (function () {
        function MenuSideBarComponent(menuService) {
            this.menuService = menuService;
            this.showProfile = false;
            this.rootUrl = '../../../';
            this.loadingUser = true;
            this.apps = [];
            this.originalApps = [];
            this.loadingModules = true;
            this.profileMenus = PROFILE_MENUS;
            this.filteredApp = '';
            this.showSidebarApps = false;
        }
        /**
         * @return {?}
         */
        MenuSideBarComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                var _this = this;
                this.menuService.getUserInfo(this.rootUrl).subscribe(function (profile) {
                    if (profile) {
                        _this.currentUser = {
                            name: profile.displayName,
                            email: profile.email
                        };
                    }
                    _this.loadingUser = false;
                });
                this.menuService
                    .getMenuModules(this.rootUrl)
                    .subscribe(function (menuModules) {
                    if (menuModules !== null) {
                        _this.loadingModules = false;
                        _this.originalApps = __spread(menuModules);
                        _this.apps = _this._prepareMenuModules();
                    }
                });
            };
        /**
         * @return {?}
         */
        MenuSideBarComponent.prototype._prepareMenuModules = /**
         * @return {?}
         */
            function () {
                return this.filteredApp === ''
                    ? this.originalApps.filter(function (menu) {
                        return !menu.onlyShowOnSearch;
                    })
                    : this.originalApps;
            };
        /**
         * @param {?} e
         * @return {?}
         */
        MenuSideBarComponent.prototype.toggleSidebarMenus = /**
         * @param {?} e
         * @return {?}
         */
            function (e) {
                e.stopPropagation();
                this.showSidebarApps = !this.showSidebarApps;
            };
        /**
         * @return {?}
         */
        MenuSideBarComponent.prototype.updateMenuModules = /**
         * @return {?}
         */
            function () {
                this.apps = this._prepareMenuModules();
            };
        MenuSideBarComponent.decorators = [
            { type: i0.Component, args: [{
                        selector: 'app-menu-side-bar',
                        template: "<div class=\"sidebar-container\">\n  <div class=\"sidebar-user-profile-block\">\n    <div class=\"sidebar-user-profile-logo\" *ngIf=\"!loadingUser\">{{currentUser?.name | abbreviate}}</div>\n    <div class=\"sidebar-user-profile-info\">\n      <h4 *ngIf=\"!loadingUser\">{{currentUser?.name}}</h4>\n      <h6 *ngIf=\"!loadingUser\">{{currentUser?.email}}</h6>\n    </div>\n  </div>\n  <ul class=\"sidebar-list-block\">\n    <li>\n      <a (click)=\"toggleSidebarMenus($event)\">Apps</a>\n    </li>\n    <li [ngClass]=\"{\n          'sidebar-app-hidden': !showSidebarApps\n        }\">\n      <input type=\"text\" class=\"sidebar-app-input\" placeholder=\"Search Apps\" [(ngModel)]=\"filteredApp\" (ngModelChange)=\"updateMenuModules()\">\n    </li>\n    <li class=\"sidebar-app-list\" [ngClass]=\"{\n          'sidebar-app-hidden': !showSidebarApps\n        }\">\n      <a *ngFor=\"let app of  apps | filterByName: filteredApp\" [href]=\"app.defaultAction\" class=\"sidebar-app-menu-btn\">\n        <div class=\"sidebar-app-menu-btn-content\">\n          <img alt=\"\" [src]=\"app.icon\" title=\"{{app.displayName}}\">\n          <div class=\"app-menu-name\">{{app.displayName}}</div>\n        </div>\n      </a>\n    </li>\n    <li *ngFor=\"let profileMenu of profileMenus\">\n      <a [href]=\"rootUrl + profileMenu.defaultAction\">\n        <img alt=\"\" [src]=\"profileMenu.icon\"> {{profileMenu.name}}\n      </a>\n    </li>\n    <li>\n      <a [href]=\"rootUrl + 'dhis-web-commons-security/logout.action'\">Log Out</a>\n    </li>\n  </ul>\n</div>",
                        styles: [".sidebar-user-profile-block{text-align:left;background-color:#eee;height:100px;padding:5px;display:flex}.sidebar-user-profile-logo{height:90px;display:flex;align-items:center;justify-content:center;font-size:40px;font-weight:500;color:#9e9e9e;width:90px;border-radius:45px;text-align:center;background-color:#ddd}.sidebar-user-profile-info{padding:15px}.sidebar-list-block{list-style-type:none;margin:0;padding:0;display:block}.sidebar-hidden{display:none!important}.sidebar-app-input{border-style:none;border-bottom:1px solid #eee;color:#000;width:100%;padding:7px}.sidebar-app-input:focus{outline:0}.sidebar-list-block li a{text-decoration:none;display:block;color:#000;border-bottom:1px solid #eee;padding:10px 15px}.sidebar-list-block li a img{height:20px}.sidebar-app-list{display:flex;overflow:auto;height:200px;flex-wrap:wrap}.sidebar-app-menu-btn{display:flex!important;align-items:center;justify-content:center;margin:5px;text-decoration:none;border-radius:5px;border:1px solid #ddd;transition:all .2s ease-in-out;width:85px;height:85px}.sidebar-app-menu-btn-content{text-align:center}.app-menu-name{margin-top:5px;font-size:12px}"]
                    },] },
        ];
        /** @nocollapse */
        MenuSideBarComponent.ctorParameters = function () {
            return [
                { type: MenuService }
            ];
        };
        MenuSideBarComponent.propDecorators = {
            rootUrl: [{ type: i0.Input }]
        };
        return MenuSideBarComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var MenuNotificationService = (function () {
        function MenuNotificationService(httpClient) {
            this.httpClient = httpClient;
        }
        /**
         * @param {?} rootUrl
         * @return {?}
         */
        MenuNotificationService.prototype.loadNotification = /**
         * @param {?} rootUrl
         * @return {?}
         */
            function (rootUrl) {
                return this.httpClient.get(rootUrl + "api/me/dashboard.json").pipe(operators.catchError(function () { return rxjs.of(null); }));
            };
        MenuNotificationService.decorators = [
            { type: i0.Injectable, args: [{ providedIn: 'root' },] },
        ];
        /** @nocollapse */
        MenuNotificationService.ctorParameters = function () {
            return [
                { type: i1.HttpClient }
            ];
        };
        /** @nocollapse */ MenuNotificationService.ngInjectableDef = i0.defineInjectable({ factory: function MenuNotificationService_Factory() { return new MenuNotificationService(i0.inject(i1.HttpClient)); }, token: MenuNotificationService, providedIn: "root" });
        return MenuNotificationService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var MenuNotificationComponent = (function () {
        function MenuNotificationComponent(menuNotificationService, menuService) {
            this.menuNotificationService = menuNotificationService;
            this.menuService = menuService;
            this.notificationMenuLinks = {};
        }
        /**
         * @return {?}
         */
        MenuNotificationComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                var _this = this;
                this.menuNotificationService.loadNotification(this.rootUrl).subscribe(function (notificationResults) {
                    _this.menuNotification = notificationResults;
                });
                this.menuService.getSanitizedMenus().pipe(operators.filter(function (result) { return result.length > 0; })).
                    subscribe(function (sanitizedMenus) {
                    _.each(_.filter(sanitizedMenus, function (menuItem) { return menuItem.name.indexOf('interpretation') !== -1 || menuItem.name.indexOf('messaging') !== -1; }), function (menuItem) {
                        if (menuItem.name.indexOf('interpretation') !== -1) {
                            _this.notificationMenuLinks['interpretation'] = menuItem.defaultAction;
                        }
                        else if (menuItem.name.indexOf('messaging') !== -1) {
                            _this.notificationMenuLinks['message'] = menuItem.defaultAction;
                        }
                    });
                });
            };
        MenuNotificationComponent.decorators = [
            { type: i0.Component, args: [{
                        selector: 'app-menu-notification',
                        template: "<div class=\"menu-notification\" *ngIf=\"menuNotification\">\n  <a class=\"menu-chat-notification\"\n     *ngIf=\"notificationMenuLinks.interpretation\"\n     [href]=\"notificationMenuLinks.interpretation\"\n     title=\"You have {{ menuNotification.unreadInterpretations }} unread interpretations\"\n  >\n    <div *ngIf=\"menuNotification.unreadInterpretations > 0\" class=\"menu-notification-badge\">\n      {{menuNotification.unreadInterpretations}}\n    </div>\n    <svg class=\"\" viewBox=\"0 0 24 24\"\n         style=\"display: inline-block; color: rgba(0, 0, 0, 0.87); fill: white; height: 24px; width: 24px; user-select: none; transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;\">\n      <path\n        d=\"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z\"></path>\n    </svg>\n  </a>\n  <a class=\"menu-message-conversation-notification\"\n     *ngIf=\"notificationMenuLinks.message\"\n     [href]=\"notificationMenuLinks.message\"\n     title=\"You have {{ menuNotification.unreadMessageConversations }} unread message conversations\"\n  >\n    <div *ngIf=\"menuNotification.unreadMessageConversations > 0\" class=\"menu-notification-badge\">\n      {{menuNotification.unreadMessageConversations}}\n    </div>\n    <svg class=\"\" viewBox=\"0 0 24 24\"\n         style=\"display: inline-block; color: rgba(0, 0, 0, 0.87); fill: white; height: 24px; width: 24px; user-select: none; transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;\">\n      <path\n        d=\"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\"></path>\n    </svg>\n  </a>\n</div>\n",
                        styles: [".menu-notification{display:flex;align-items:center;justify-content:space-around}.menu-chat-notification{padding-top:5px;margin-right:10px}.menu-message-conversation-notification{padding-top:4px;margin-left:10px}.menu-chat-notification,.menu-message-conversation-notification{position:relative}.menu-notification-badge{display:flex;flex-flow:row wrap;place-content:center;align-items:center;position:absolute;top:-4px;right:-6px;font-weight:500;font-size:9px;width:20px;height:20px;border-radius:50%;background-color:#4ca899;color:#fff;z-index:10}"]
                    },] },
        ];
        /** @nocollapse */
        MenuNotificationComponent.ctorParameters = function () {
            return [
                { type: MenuNotificationService },
                { type: MenuService }
            ];
        };
        MenuNotificationComponent.propDecorators = {
            rootUrl: [{ type: i0.Input }]
        };
        return MenuNotificationComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var /** @type {?} */ components = [
        MenuLoaderComponent,
        MenuProfileComponent,
        MenuSearchComponent,
        LoginFormComponent,
        MenuSideBarComponent,
        MenuNotificationComponent
    ];

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var ClickOutsideDirective = (function () {
        function ClickOutsideDirective(_elementRef) {
            this._elementRef = _elementRef;
            this.clickOutside = new i0.EventEmitter();
        }
        /**
         * @param {?} targetElement
         * @return {?}
         */
        ClickOutsideDirective.prototype.onClick = /**
         * @param {?} targetElement
         * @return {?}
         */
            function (targetElement) {
                var /** @type {?} */ clickedInside = this._elementRef.nativeElement.contains(targetElement);
                if (!clickedInside) {
                    this.clickOutside.emit(true);
                }
            };
        ClickOutsideDirective.decorators = [
            { type: i0.Directive, args: [{
                        selector: '[appClickOutside]'
                    },] },
        ];
        /** @nocollapse */
        ClickOutsideDirective.ctorParameters = function () {
            return [
                { type: i0.ElementRef }
            ];
        };
        ClickOutsideDirective.propDecorators = {
            clickOutside: [{ type: i0.Output }],
            onClick: [{ type: i0.HostListener, args: ['document:click', ['$event.target'],] }]
        };
        return ClickOutsideDirective;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var /** @type {?} */ directives = [ClickOutsideDirective];

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var FilterByNamePipe = (function () {
        function FilterByNamePipe() {
        }
        /**
         * @param {?} list
         * @param {?} name
         * @return {?}
         */
        FilterByNamePipe.prototype.transform = /**
         * @param {?} list
         * @param {?} name
         * @return {?}
         */
            function (list, name) {
                var /** @type {?} */ splitedName = name ? name.split(/[\.\-_]/) : [];
                return splitedName.length > 0
                    ? list.filter(function (item) {
                        return splitedName.some(function (nameString) {
                            return item.displayName.toLowerCase().indexOf(nameString.toLowerCase()) !== -1;
                        });
                    })
                    : list;
            };
        FilterByNamePipe.decorators = [
            { type: i0.Pipe, args: [{
                        name: 'filterByName'
                    },] },
        ];
        return FilterByNamePipe;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var AbbreviatePipe = (function () {
        function AbbreviatePipe() {
        }
        /**
         * @param {?} name
         * @param {?=} args
         * @return {?}
         */
        AbbreviatePipe.prototype.transform = /**
         * @param {?} name
         * @param {?=} args
         * @return {?}
         */
            function (name, args) {
                var /** @type {?} */ abbreviatedName = [];
                var /** @type {?} */ count = 0;
                if (name) {
                    for (var /** @type {?} */ i = 0; i <= name.length - 1; i++) {
                        if (i === 0) {
                            abbreviatedName.push(name[i].toUpperCase());
                        }
                        else {
                            if (name[i] === ' ') {
                                count = i;
                                abbreviatedName.push(name[count + 1].toUpperCase());
                            }
                        }
                    }
                }
                return abbreviatedName.join('');
            };
        AbbreviatePipe.decorators = [
            { type: i0.Pipe, args: [{
                        name: 'abbreviate'
                    },] },
        ];
        return AbbreviatePipe;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var ConvertToLighterColor = (function () {
        function ConvertToLighterColor() {
        }
        /**
         * @param {?} hexColor
         * @return {?}
         */
        ConvertToLighterColor.prototype.transform = /**
         * @param {?} hexColor
         * @return {?}
         */
            function (hexColor) {
                var /** @type {?} */ hex = hexColor.replace('#', '');
                var /** @type {?} */ r = parseInt(hex.substring(0, 2), 16) + 30;
                var /** @type {?} */ g = parseInt(hex.substring(2, 4), 16) + 30;
                var /** @type {?} */ b = parseInt(hex.substring(4, 6), 16) + 30;
                return 'rgb(' + r + ',' + g + ',' + b + ')';
            };
        ConvertToLighterColor.decorators = [
            { type: i0.Pipe, args: [{
                        name: 'convertToLighterColor'
                    },] },
        ];
        return ConvertToLighterColor;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var /** @type {?} */ pipes = [FilterByNamePipe, AbbreviatePipe, ConvertToLighterColor];

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var NgxDhis2MenuModule = (function () {
        function NgxDhis2MenuModule() {
        }
        NgxDhis2MenuModule.decorators = [
            { type: i0.NgModule, args: [{
                        imports: [common.CommonModule, forms.FormsModule, i1.HttpClientModule],
                        declarations: __spread(containers, components, directives, pipes),
                        exports: __spread(containers)
                    },] },
        ];
        return NgxDhis2MenuModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    exports.NgxDhis2MenuModule = NgxDhis2MenuModule;
    exports.ɵe = components;
    exports.ɵi = LoginFormComponent;
    exports.ɵf = MenuLoaderComponent;
    exports.ɵk = MenuNotificationComponent;
    exports.ɵg = MenuProfileComponent;
    exports.ɵh = MenuSearchComponent;
    exports.ɵj = MenuSideBarComponent;
    exports.ɵa = containers;
    exports.ɵb = MenuComponent;
    exports.ɵn = ClickOutsideDirective;
    exports.ɵm = directives;
    exports.ɵq = AbbreviatePipe;
    exports.ɵr = ConvertToLighterColor;
    exports.ɵp = FilterByNamePipe;
    exports.ɵo = pipes;
    exports.ɵl = MenuNotificationService;
    exports.ɵc = MenuService;
    exports.ɵd = SystemStateService;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,