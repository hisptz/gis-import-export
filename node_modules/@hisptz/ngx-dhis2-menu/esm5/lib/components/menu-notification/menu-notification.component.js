/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { MenuNotificationService } from '../../services/menu-notification.service';
import { MenuService } from '../../services/menu.service';
import { filter } from 'rxjs/operators';
import * as _ from 'lodash';
var MenuNotificationComponent = /** @class */ (function () {
    function MenuNotificationComponent(menuNotificationService, menuService) {
        this.menuNotificationService = menuNotificationService;
        this.menuService = menuService;
        this.notificationMenuLinks = {};
    }
    /**
     * @return {?}
     */
    MenuNotificationComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.menuNotificationService.loadNotification(this.rootUrl).subscribe(function (notificationResults) {
            _this.menuNotification = notificationResults;
        });
        this.menuService.getSanitizedMenus().pipe(filter(function (result) { return result.length > 0; })).
            subscribe(function (sanitizedMenus) {
            _.each(_.filter(sanitizedMenus, function (menuItem) { return menuItem.name.indexOf('interpretation') !== -1 || menuItem.name.indexOf('messaging') !== -1; }), function (menuItem) {
                if (menuItem.name.indexOf('interpretation') !== -1) {
                    _this.notificationMenuLinks['interpretation'] = menuItem.defaultAction;
                }
                else if (menuItem.name.indexOf('messaging') !== -1) {
                    _this.notificationMenuLinks['message'] = menuItem.defaultAction;
                }
            });
        });
    };
    MenuNotificationComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-menu-notification',
                    template: "<div class=\"menu-notification\" *ngIf=\"menuNotification\">\n  <a class=\"menu-chat-notification\"\n     *ngIf=\"notificationMenuLinks.interpretation\"\n     [href]=\"notificationMenuLinks.interpretation\"\n     title=\"You have {{ menuNotification.unreadInterpretations }} unread interpretations\"\n  >\n    <div *ngIf=\"menuNotification.unreadInterpretations > 0\" class=\"menu-notification-badge\">\n      {{menuNotification.unreadInterpretations}}\n    </div>\n    <svg class=\"\" viewBox=\"0 0 24 24\"\n         style=\"display: inline-block; color: rgba(0, 0, 0, 0.87); fill: white; height: 24px; width: 24px; user-select: none; transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;\">\n      <path\n        d=\"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z\"></path>\n    </svg>\n  </a>\n  <a class=\"menu-message-conversation-notification\"\n     *ngIf=\"notificationMenuLinks.message\"\n     [href]=\"notificationMenuLinks.message\"\n     title=\"You have {{ menuNotification.unreadMessageConversations }} unread message conversations\"\n  >\n    <div *ngIf=\"menuNotification.unreadMessageConversations > 0\" class=\"menu-notification-badge\">\n      {{menuNotification.unreadMessageConversations}}\n    </div>\n    <svg class=\"\" viewBox=\"0 0 24 24\"\n         style=\"display: inline-block; color: rgba(0, 0, 0, 0.87); fill: white; height: 24px; width: 24px; user-select: none; transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;\">\n      <path\n        d=\"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\"></path>\n    </svg>\n  </a>\n</div>\n",
                    styles: [".menu-notification{display:flex;align-items:center;justify-content:space-around}.menu-chat-notification{padding-top:5px;margin-right:10px}.menu-message-conversation-notification{padding-top:4px;margin-left:10px}.menu-chat-notification,.menu-message-conversation-notification{position:relative}.menu-notification-badge{display:flex;flex-flow:row wrap;place-content:center;align-items:center;position:absolute;top:-4px;right:-6px;font-weight:500;font-size:9px;width:20px;height:20px;border-radius:50%;background-color:#4ca899;color:#fff;z-index:10}"]
                },] },
    ];
    /** @nocollapse */
    MenuNotificationComponent.ctorParameters = function () { return [
        { type: MenuNotificationService },
        { type: MenuService }
    ]; };
    MenuNotificationComponent.propDecorators = {
        rootUrl: [{ type: Input }]
    };
    return MenuNotificationComponent;
}());
export { MenuNotificationComponent };
function MenuNotificationComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    MenuNotificationComponent.prototype.rootUrl;
    /** @type {?} */
    MenuNotificationComponent.prototype.menuNotification;
    /** @type {?} */
    MenuNotificationComponent.prototype.notificationMenuLinks;
    /** @type {?} */
    MenuNotificationComponent.prototype.menuNotificationService;
    /** @type {?} */
    MenuNotificationComponent.prototype.menuService;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS1ub3RpZmljYXRpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGhpc3B0ei9uZ3gtZGhpczItbWVudS8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL21lbnUtbm90aWZpY2F0aW9uL21lbnUtbm90aWZpY2F0aW9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDekQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFDbkYsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQzFELE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUN4QyxPQUFPLEtBQUssQ0FBQyxNQUFNLFFBQVEsQ0FBQzs7SUE4QzFCLG1DQUFvQix1QkFBZ0QsRUFBVSxXQUF3QjtRQUFsRiw0QkFBdUIsR0FBdkIsdUJBQXVCLENBQXlCO1FBQVUsZ0JBQVcsR0FBWCxXQUFXLENBQWE7cUNBRnpFLEVBQUU7S0FHOUI7Ozs7SUFFRCw0Q0FBUTs7O0lBQVI7UUFBQSxpQkFnQkM7UUFmQyxJQUFJLENBQUMsdUJBQXVCLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLFNBQVMsQ0FBQyxVQUFDLG1CQUF3QjtZQUM3RixLQUFJLENBQUMsZ0JBQWdCLEdBQUcsbUJBQW1CLENBQUM7U0FDN0MsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLFdBQVcsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsVUFBQyxNQUFhLElBQUssT0FBQSxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBakIsQ0FBaUIsQ0FBQyxDQUFDO1lBQ3JGLFNBQVMsQ0FBQyxVQUFDLGNBQW1CO1lBQzVCLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxjQUFjLEVBQzVCLFVBQUEsUUFBUSxJQUFJLE9BQUEsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBM0YsQ0FBMkYsQ0FBQyxFQUFFLFVBQUEsUUFBUTtnQkFDbEgsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQ25ELEtBQUksQ0FBQyxxQkFBcUIsQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUM7aUJBQ3ZFO2dCQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQ3JELEtBQUksQ0FBQyxxQkFBcUIsQ0FBQyxTQUFTLENBQUMsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDO2lCQUNoRTthQUNGLENBQUMsQ0FBQztTQUNKLENBQUMsQ0FBQztLQUNOOztnQkEvREYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSx1QkFBdUI7b0JBQ2pDLFFBQVEsRUFBRSw0cURBOEJYO29CQUNDLE1BQU0sRUFBRSxDQUFDLG9pQkFBb2lCLENBQUM7aUJBQy9pQjs7OztnQkF2Q1EsdUJBQXVCO2dCQUN2QixXQUFXOzs7MEJBeUNqQixLQUFLOztvQ0EzQ1I7O1NBeUNhLHlCQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWVudU5vdGlmaWNhdGlvblNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9tZW51LW5vdGlmaWNhdGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IE1lbnVTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvbWVudS5zZXJ2aWNlJztcbmltcG9ydCB7IGZpbHRlciB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCAqIGFzIF8gZnJvbSAnbG9kYXNoJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYXBwLW1lbnUtbm90aWZpY2F0aW9uJyxcbiAgdGVtcGxhdGU6IGA8ZGl2IGNsYXNzPVwibWVudS1ub3RpZmljYXRpb25cIiAqbmdJZj1cIm1lbnVOb3RpZmljYXRpb25cIj5cbiAgPGEgY2xhc3M9XCJtZW51LWNoYXQtbm90aWZpY2F0aW9uXCJcbiAgICAgKm5nSWY9XCJub3RpZmljYXRpb25NZW51TGlua3MuaW50ZXJwcmV0YXRpb25cIlxuICAgICBbaHJlZl09XCJub3RpZmljYXRpb25NZW51TGlua3MuaW50ZXJwcmV0YXRpb25cIlxuICAgICB0aXRsZT1cIllvdSBoYXZlIHt7IG1lbnVOb3RpZmljYXRpb24udW5yZWFkSW50ZXJwcmV0YXRpb25zIH19IHVucmVhZCBpbnRlcnByZXRhdGlvbnNcIlxuICA+XG4gICAgPGRpdiAqbmdJZj1cIm1lbnVOb3RpZmljYXRpb24udW5yZWFkSW50ZXJwcmV0YXRpb25zID4gMFwiIGNsYXNzPVwibWVudS1ub3RpZmljYXRpb24tYmFkZ2VcIj5cbiAgICAgIHt7bWVudU5vdGlmaWNhdGlvbi51bnJlYWRJbnRlcnByZXRhdGlvbnN9fVxuICAgIDwvZGl2PlxuICAgIDxzdmcgY2xhc3M9XCJcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCJcbiAgICAgICAgIHN0eWxlPVwiZGlzcGxheTogaW5saW5lLWJsb2NrOyBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTsgZmlsbDogd2hpdGU7IGhlaWdodDogMjRweDsgd2lkdGg6IDI0cHg7IHVzZXItc2VsZWN0OiBub25lOyB0cmFuc2l0aW9uOiBhbGwgNDUwbXMgY3ViaWMtYmV6aWVyKDAuMjMsIDEsIDAuMzIsIDEpIDBtcztcIj5cbiAgICAgIDxwYXRoXG4gICAgICAgIGQ9XCJNMjAgMkg0Yy0xLjEgMC0xLjk5LjktMS45OSAyTDIgMjJsNC00aDE0YzEuMSAwIDItLjkgMi0yVjRjMC0xLjEtLjktMi0yLTJ6bS0yIDEySDZ2LTJoMTJ2MnptMC0zSDZWOWgxMnYyem0wLTNINlY2aDEydjJ6XCI+PC9wYXRoPlxuICAgIDwvc3ZnPlxuICA8L2E+XG4gIDxhIGNsYXNzPVwibWVudS1tZXNzYWdlLWNvbnZlcnNhdGlvbi1ub3RpZmljYXRpb25cIlxuICAgICAqbmdJZj1cIm5vdGlmaWNhdGlvbk1lbnVMaW5rcy5tZXNzYWdlXCJcbiAgICAgW2hyZWZdPVwibm90aWZpY2F0aW9uTWVudUxpbmtzLm1lc3NhZ2VcIlxuICAgICB0aXRsZT1cIllvdSBoYXZlIHt7IG1lbnVOb3RpZmljYXRpb24udW5yZWFkTWVzc2FnZUNvbnZlcnNhdGlvbnMgfX0gdW5yZWFkIG1lc3NhZ2UgY29udmVyc2F0aW9uc1wiXG4gID5cbiAgICA8ZGl2ICpuZ0lmPVwibWVudU5vdGlmaWNhdGlvbi51bnJlYWRNZXNzYWdlQ29udmVyc2F0aW9ucyA+IDBcIiBjbGFzcz1cIm1lbnUtbm90aWZpY2F0aW9uLWJhZGdlXCI+XG4gICAgICB7e21lbnVOb3RpZmljYXRpb24udW5yZWFkTWVzc2FnZUNvbnZlcnNhdGlvbnN9fVxuICAgIDwvZGl2PlxuICAgIDxzdmcgY2xhc3M9XCJcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCJcbiAgICAgICAgIHN0eWxlPVwiZGlzcGxheTogaW5saW5lLWJsb2NrOyBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTsgZmlsbDogd2hpdGU7IGhlaWdodDogMjRweDsgd2lkdGg6IDI0cHg7IHVzZXItc2VsZWN0OiBub25lOyB0cmFuc2l0aW9uOiBhbGwgNDUwbXMgY3ViaWMtYmV6aWVyKDAuMjMsIDEsIDAuMzIsIDEpIDBtcztcIj5cbiAgICAgIDxwYXRoXG4gICAgICAgIGQ9XCJNMjAgNEg0Yy0xLjEgMC0xLjk5LjktMS45OSAyTDIgMThjMCAxLjEuOSAyIDIgMmgxNmMxLjEgMCAyLS45IDItMlY2YzAtMS4xLS45LTItMi0yem0wIDRsLTggNS04LTVWNmw4IDUgOC01djJ6XCI+PC9wYXRoPlxuICAgIDwvc3ZnPlxuICA8L2E+XG48L2Rpdj5cbmAsXG4gIHN0eWxlczogW2AubWVudS1ub3RpZmljYXRpb257ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYXJvdW5kfS5tZW51LWNoYXQtbm90aWZpY2F0aW9ue3BhZGRpbmctdG9wOjVweDttYXJnaW4tcmlnaHQ6MTBweH0ubWVudS1tZXNzYWdlLWNvbnZlcnNhdGlvbi1ub3RpZmljYXRpb257cGFkZGluZy10b3A6NHB4O21hcmdpbi1sZWZ0OjEwcHh9Lm1lbnUtY2hhdC1ub3RpZmljYXRpb24sLm1lbnUtbWVzc2FnZS1jb252ZXJzYXRpb24tbm90aWZpY2F0aW9ue3Bvc2l0aW9uOnJlbGF0aXZlfS5tZW51LW5vdGlmaWNhdGlvbi1iYWRnZXtkaXNwbGF5OmZsZXg7ZmxleC1mbG93OnJvdyB3cmFwO3BsYWNlLWNvbnRlbnQ6Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6LTRweDtyaWdodDotNnB4O2ZvbnQtd2VpZ2h0OjUwMDtmb250LXNpemU6OXB4O3dpZHRoOjIwcHg7aGVpZ2h0OjIwcHg7Ym9yZGVyLXJhZGl1czo1MCU7YmFja2dyb3VuZC1jb2xvcjojNGNhODk5O2NvbG9yOiNmZmY7ei1pbmRleDoxMH1gXVxufSlcbmV4cG9ydCBjbGFzcyBNZW51Tm90aWZpY2F0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBASW5wdXQoKVxuICByb290VXJsOiBzdHJpbmc7XG5cbiAgbWVudU5vdGlmaWNhdGlvbjogYW55O1xuXG4gIG5vdGlmaWNhdGlvbk1lbnVMaW5rczogYW55ID0ge307XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBtZW51Tm90aWZpY2F0aW9uU2VydmljZTogTWVudU5vdGlmaWNhdGlvblNlcnZpY2UsIHByaXZhdGUgbWVudVNlcnZpY2U6IE1lbnVTZXJ2aWNlKSB7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLm1lbnVOb3RpZmljYXRpb25TZXJ2aWNlLmxvYWROb3RpZmljYXRpb24odGhpcy5yb290VXJsKS5zdWJzY3JpYmUoKG5vdGlmaWNhdGlvblJlc3VsdHM6IGFueSkgPT4ge1xuICAgICAgdGhpcy5tZW51Tm90aWZpY2F0aW9uID0gbm90aWZpY2F0aW9uUmVzdWx0cztcbiAgICB9KTtcblxuICAgIHRoaXMubWVudVNlcnZpY2UuZ2V0U2FuaXRpemVkTWVudXMoKS5waXBlKGZpbHRlcigocmVzdWx0OiBhbnlbXSkgPT4gcmVzdWx0Lmxlbmd0aCA+IDApKS5cbiAgICAgIHN1YnNjcmliZSgoc2FuaXRpemVkTWVudXM6IGFueSkgPT4ge1xuICAgICAgICBfLmVhY2goXy5maWx0ZXIoc2FuaXRpemVkTWVudXMsXG4gICAgICAgICAgbWVudUl0ZW0gPT4gbWVudUl0ZW0ubmFtZS5pbmRleE9mKCdpbnRlcnByZXRhdGlvbicpICE9PSAtMSB8fCBtZW51SXRlbS5uYW1lLmluZGV4T2YoJ21lc3NhZ2luZycpICE9PSAtMSksIG1lbnVJdGVtID0+IHtcbiAgICAgICAgICBpZiAobWVudUl0ZW0ubmFtZS5pbmRleE9mKCdpbnRlcnByZXRhdGlvbicpICE9PSAtMSkge1xuICAgICAgICAgICAgdGhpcy5ub3RpZmljYXRpb25NZW51TGlua3NbJ2ludGVycHJldGF0aW9uJ10gPSBtZW51SXRlbS5kZWZhdWx0QWN0aW9uO1xuICAgICAgICAgIH0gZWxzZSBpZiAobWVudUl0ZW0ubmFtZS5pbmRleE9mKCdtZXNzYWdpbmcnKSAhPT0gLTEpIHtcbiAgICAgICAgICAgIHRoaXMubm90aWZpY2F0aW9uTWVudUxpbmtzWydtZXNzYWdlJ10gPSBtZW51SXRlbS5kZWZhdWx0QWN0aW9uO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgfVxuXG59XG4iXX0=