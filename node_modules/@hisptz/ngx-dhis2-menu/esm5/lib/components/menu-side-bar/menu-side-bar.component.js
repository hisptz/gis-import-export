/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
import { MenuService } from '../../services/menu.service';
import { PROFILE_MENUS } from '../../constants/profile-menus';
var MenuSideBarComponent = /** @class */ (function () {
    function MenuSideBarComponent(menuService) {
        this.menuService = menuService;
        this.showProfile = false;
        this.rootUrl = '../../../';
        this.loadingUser = true;
        this.apps = [];
        this.originalApps = [];
        this.loadingModules = true;
        this.profileMenus = PROFILE_MENUS;
        this.filteredApp = '';
        this.showSidebarApps = false;
    }
    /**
     * @return {?}
     */
    MenuSideBarComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.menuService.getUserInfo(this.rootUrl).subscribe(function (profile) {
            if (profile) {
                _this.currentUser = {
                    name: profile.displayName,
                    email: profile.email
                };
            }
            _this.loadingUser = false;
        });
        this.menuService
            .getMenuModules(this.rootUrl)
            .subscribe(function (menuModules) {
            if (menuModules !== null) {
                _this.loadingModules = false;
                _this.originalApps = tslib_1.__spread(menuModules);
                _this.apps = _this._prepareMenuModules();
            }
        });
    };
    /**
     * @return {?}
     */
    MenuSideBarComponent.prototype._prepareMenuModules = /**
     * @return {?}
     */
    function () {
        return this.filteredApp === ''
            ? this.originalApps.filter(function (menu) {
                return !menu.onlyShowOnSearch;
            })
            : this.originalApps;
    };
    /**
     * @param {?} e
     * @return {?}
     */
    MenuSideBarComponent.prototype.toggleSidebarMenus = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        e.stopPropagation();
        this.showSidebarApps = !this.showSidebarApps;
    };
    /**
     * @return {?}
     */
    MenuSideBarComponent.prototype.updateMenuModules = /**
     * @return {?}
     */
    function () {
        this.apps = this._prepareMenuModules();
    };
    MenuSideBarComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-menu-side-bar',
                    template: "<div class=\"sidebar-container\">\n  <div class=\"sidebar-user-profile-block\">\n    <div class=\"sidebar-user-profile-logo\" *ngIf=\"!loadingUser\">{{currentUser?.name | abbreviate}}</div>\n    <div class=\"sidebar-user-profile-info\">\n      <h4 *ngIf=\"!loadingUser\">{{currentUser?.name}}</h4>\n      <h6 *ngIf=\"!loadingUser\">{{currentUser?.email}}</h6>\n    </div>\n  </div>\n  <ul class=\"sidebar-list-block\">\n    <li>\n      <a (click)=\"toggleSidebarMenus($event)\">Apps</a>\n    </li>\n    <li [ngClass]=\"{\n          'sidebar-app-hidden': !showSidebarApps\n        }\">\n      <input type=\"text\" class=\"sidebar-app-input\" placeholder=\"Search Apps\" [(ngModel)]=\"filteredApp\" (ngModelChange)=\"updateMenuModules()\">\n    </li>\n    <li class=\"sidebar-app-list\" [ngClass]=\"{\n          'sidebar-app-hidden': !showSidebarApps\n        }\">\n      <a *ngFor=\"let app of  apps | filterByName: filteredApp\" [href]=\"app.defaultAction\" class=\"sidebar-app-menu-btn\">\n        <div class=\"sidebar-app-menu-btn-content\">\n          <img alt=\"\" [src]=\"app.icon\" title=\"{{app.displayName}}\">\n          <div class=\"app-menu-name\">{{app.displayName}}</div>\n        </div>\n      </a>\n    </li>\n    <li *ngFor=\"let profileMenu of profileMenus\">\n      <a [href]=\"rootUrl + profileMenu.defaultAction\">\n        <img alt=\"\" [src]=\"profileMenu.icon\"> {{profileMenu.name}}\n      </a>\n    </li>\n    <li>\n      <a [href]=\"rootUrl + 'dhis-web-commons-security/logout.action'\">Log Out</a>\n    </li>\n  </ul>\n</div>",
                    styles: [".sidebar-user-profile-block{text-align:left;background-color:#eee;height:100px;padding:5px;display:flex}.sidebar-user-profile-logo{height:90px;display:flex;align-items:center;justify-content:center;font-size:40px;font-weight:500;color:#9e9e9e;width:90px;border-radius:45px;text-align:center;background-color:#ddd}.sidebar-user-profile-info{padding:15px}.sidebar-list-block{list-style-type:none;margin:0;padding:0;display:block}.sidebar-hidden{display:none!important}.sidebar-app-input{border-style:none;border-bottom:1px solid #eee;color:#000;width:100%;padding:7px}.sidebar-app-input:focus{outline:0}.sidebar-list-block li a{text-decoration:none;display:block;color:#000;border-bottom:1px solid #eee;padding:10px 15px}.sidebar-list-block li a img{height:20px}.sidebar-app-list{display:flex;overflow:auto;height:200px;flex-wrap:wrap}.sidebar-app-menu-btn{display:flex!important;align-items:center;justify-content:center;margin:5px;text-decoration:none;border-radius:5px;border:1px solid #ddd;transition:all .2s ease-in-out;width:85px;height:85px}.sidebar-app-menu-btn-content{text-align:center}.app-menu-name{margin-top:5px;font-size:12px}"]
                },] },
    ];
    /** @nocollapse */
    MenuSideBarComponent.ctorParameters = function () { return [
        { type: MenuService }
    ]; };
    MenuSideBarComponent.propDecorators = {
        rootUrl: [{ type: Input }]
    };
    return MenuSideBarComponent;
}());
export { MenuSideBarComponent };
function MenuSideBarComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    MenuSideBarComponent.prototype.rootUrl;
    /** @type {?} */
    MenuSideBarComponent.prototype.showProfile;
    /** @type {?} */
    MenuSideBarComponent.prototype.currentUser;
    /** @type {?} */
    MenuSideBarComponent.prototype.loadingUser;
    /** @type {?} */
    MenuSideBarComponent.prototype.profileMenus;
    /** @type {?} */
    MenuSideBarComponent.prototype.apps;
    /** @type {?} */
    MenuSideBarComponent.prototype.originalApps;
    /** @type {?} */
    MenuSideBarComponent.prototype.loadingModules;
    /** @type {?} */
    MenuSideBarComponent.prototype.filteredApp;
    /** @type {?} */
    MenuSideBarComponent.prototype.showSidebarApps;
    /** @type {?} */
    MenuSideBarComponent.prototype.menuService;
}

//# sourceMappingURL=data:application/json;base64,